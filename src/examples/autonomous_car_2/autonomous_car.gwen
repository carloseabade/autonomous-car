GWENDOLEN

:name: car

:Initial Beliefs:

:Initial Goals:

:Plans:
+start : {True} <- 
	print(start),
	print(gps_enable),
	gps_enable,
	print(sensor_enable), 
	sensor_enable,
	print(check_env),
	check_env,  
	+!go_forward [perform];
	
/************************************************************* 2 LANES NA MESMA DIREÇÃO *************************************************************/

        /**************************************** SEM OBSTÁCULOS PRÓXIMOS ANDA NA VELOCIDADE MÁXIMA ****************************************/                          

+!go_forward [perform] : {B lane0(D0), 
						  B lane1(D1),
						  0 < D0,
						  0 < D1,  
						 ~B obs1Close, 
						 ~B obs2Close,
						 ~B stop,
						 ~B change_lane,
						  B velocity(V), 
						  B maxVelocity(MV),
						  V < MV} <-						 
	+accelerate;

+!go_forward [perform] : {B lane0(D0), 
						  B lane1(D1), 
						  0 < D0,
						  0 < D1,   
						 ~B obs1Close, 
						 ~B obs2Close,
						 ~B stop,
						 ~B change_lane,
						  B velocity(V), 
						  B maxVelocity(MV),
						  V == MV} <-						  
	+run;


        /************************************************** COM 1 OBSTÁCULO PRÓXIMO *********************************************************/

+!go_forward [perform] : {B lane0(D0), 
						  B lane1(D1),
						  0 < D0,
						  0 < D1,  
						  B obs1Close,
						 ~B obs2Close,						  
						 ~B change_lane} <-						  
	around,
	check_env,
	+!go_forward [perform];

+!go_forward [perform] : {B lane0(D0), 
						  B lane1(D1),
						  0 < D0,
						  0 < D1,
						  B at(X, Y),
						  B obs1(X1, Y1), 
						  B obs1Close,
						  B change_lane,
						  B in_lane0,
						 ~B obs2Close,
						  Y == Y1} <-						  
	go_right,
	check_env,
	+!go_forward [perform];

+!go_forward [perform] : {B lane0(D0), 
						  B lane1(D1),
						  0 < D0,
						  0 < D1,
						  B at(X, Y),
						  B obs1(X1, Y1), 						    
						  B obs1Close,
						  B change_lane,
						  B in_lane1,
						 ~B obs2Close,
						  Y == Y1} <-						  
	go_left,
	check_env,
	+!go_forward [perform];

+!go_forward [perform] : {B lane0(D0), 
						  B lane1(D1),
						  0 < D0,
						  0 < D1, 						    
						  B obs1Close,
						 ~B change_lane,
						 ~B obs2Close} <-
	print(oi),						  
	+run;

+!go_forward [perform] : {B lane0(D0), 
						  B lane1(D1),
						  0 < D0,
						  0 < D1,  
						  B obs2Close,
						 ~B obs1Close,						  
						 ~B change_lane} <-						  
	around,
	check_env,
	+!go_forward [perform];

+!go_forward [perform] : {B lane0(D0), 
						  B lane1(D1),
						  0 < D0,
						  0 < D1,
						  B at(X, Y),  
						  B obs2(X2, Y2),
						  B obs2Close,
						  B change_lane,
						  B in_lane0,
						 ~B obs1Close,
						  Y == Y2} <-						  
	go_right,
	check_env,
	+!go_forward [perform];

+!go_forward [perform] : {B lane0(D0), 
						  B lane1(D1),
						  0 < D0,
						  0 < D1,
						  B at(X, Y),
						  B obs2(X2, Y2), 						    
						  B obs2Close,
						  B change_lane,
						  B in_lane1,
						 ~B obs1Close,
						  Y == Y2} <-						  
	go_left,
	check_env,
	+!go_forward [perform];

+!go_forward [perform] : {B lane0(D0), 
						  B lane1(D1),
						  0 < D0,
						  0 < D1, 						    
						  B obs2Close,
						 ~B change_lane,
						 ~B obs1Close} <-						  
	+run;	
	
        /**************************************************** COM 2 OBSTÁCULOS PRÓXIMOS ****************************************************/	

+!go_forward [perform] : {B lane0(D0), 
						  B lane1(D1),
						  0 < D0,
						  0 < D1,					    
						  B obs1Close,
						  B obs2Close} <-						  
	+stop;

/****************************************************************************************************************************************************/

+accelerate : {True} <-
	print(accelerate),
	accelerate, 
	*going_forward,
	-accelerate,
	check_env,
	+!go_forward [perform]; 

+decelerate : {True} <-
	print(decelerate),
	decelerate, 
	*going_forward,
	-decelerate, 
	check_env,
	+!go_forward [perform];

+run : {True} <-
	run, 
	*going_forward, 
	-run,
	check_env, 
	+!go_forward [perform];

+stop : {True} <-				 
	print(stop), 
	stop,
	+go_forward;

+stopped : {True} <- print(END);
