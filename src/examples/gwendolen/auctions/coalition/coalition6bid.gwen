// ----------------------------------------------------------------------------
// Copyright (C) 2012 Louise A. Dennis,  Michael Fisher, and Matt Webster
//
// This file is part of Gwendolen
// 
// Gwendolen is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 3 of the License, or (at your option) any later version.
// 
// Gwendolen is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// Lesser General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public
// License along with Gwendolen; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
// 
// To contact the authors:
// http://www.csc.liv.ac.uk/~lad
//
//----------------------------------------------------------------------------

GWENDOLEN

:name: ag1

:Initial Beliefs:


:Initial Goals:

:Plans:

+.received(:tell, B): {True} <- +B;   
+bid(Z, A) : {.B bid(X1, ag2), .B bid(X2, ag3), .B bid(X3, ag4), .B bid(X4, ag5), .B bid(250, Ag), ~.sent(Ag, Me, :tell, win)} <- .send(Ag, :tell, win);

:name: ag2

:Initial Beliefs:

my_name(ag2)

:Initial Goals:

coalition [perform]

:Plans:

+.received(:tell, B): {True} <- +B;   
+!bid [perform] : {.B my_name(Name), ~ .sent(ag1, Name, :tell, bid(250, Name))} <- .send(ag1, :tell, bid(250, Name));
+!coalition [perform] : {.B my_name(Ag), ~ .sent(ag4, Ag, :tell, coalition(Ag))} <- .send(ag4, :tell, coalition(Ag));
+agree(A, X) : {True} <- +!bid [perform];

:name: ag3

:Initial Beliefs:

my_name(ag3)

:Initial Goals:

bid [perform]

:Plans:

+.received(:tell, B): {True} <- +B;   
+!bid [perform] : {.B my_name(Name), ~ .sent(ag1, Name, :tell, bid(200, Name))} <- .send(ag1, :tell, bid(200, Name));

:name: ag4

:Initial Beliefs:

my_name(ag4)

:Initial Goals:

bid [perform]

:Plans:

+.received(:tell, B): {True} <- +B;   
+!bid [perform] : {.B my_name(Name), ~ .sent(ag1, Name, :tell, bid(150, Name))} <- .send(ag1, :tell, bid(150, Name));
+coalition(A) : { .B my_name(Name), ~ .sent(A, Name, :tell, agree(Name, 150))} <- .send(A, :tell, agree(Name, 150));

:name: ag5

:Initial Beliefs:

my_name(ag5)

:Initial Goals:

bid [perform]

:Plans:

+.received(:tell, B): {True} <- +B;   
+!bid [perform] : {.B my_name(Name), ~ .sent(ag1, Name, :tell, bid(100, Name))} <- .send(ag1, :tell, bid(100, Name));

:name: ag6

:Initial Beliefs:

my_name(ag6)

:Initial Goals:

bid [perform]

:Plans:

+.received(:tell, B): {True} <- +B;   
+!bid [perform] : {.B my_name(Name), ~ .sent(ag1, Name, :tell, bid(100, Name))} <- .send(ag1, :tell, bid(100, Name));

:name: ag7

:Initial Beliefs:

my_name(ag7)

:Initial Goals:

bid [perform]

:Plans:

+.received(:tell, B): {True} <- +B;   
+!bid [perform] : {.B my_name(Name), ~ .sent(ag1, Name, :tell, bid(100, Name))} <- .send(ag1, :tell, bid(100, Name));

