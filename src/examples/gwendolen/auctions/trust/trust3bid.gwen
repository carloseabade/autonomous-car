// ----------------------------------------------------------------------------
// Copyright (C) 2012 Louise A. Dennis,  Michael Fisher, and Matt Webster
//
// This file is part of Gwendolen
// 
// Gwendolen is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 3 of the License, or (at your option) any later version.
// 
// Gwendolen is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// Lesser General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public
// License along with Gwendolen; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
// 
// To contact the authors:
// http://www.csc.liv.ac.uk/~lad
//
//----------------------------------------------------------------------------

GWENDOLEN

:name: ag1

:Initial Beliefs:


:Initial Goals:

:Plans:

+.received(:tell, bid(D, From)) : {B bid(From, E)} <- -bid(From, E), +bid(From, D);
+.received(:tell, bid(D, From)) : {True, ~B bid(From, E)} <- +bid(From, D);
+bid(Z, A) : {B bid(ag2, X1), B bid(ag3, X2), B bid(ag4, X3), ~ .B winning_amount(Am), X2 < X1, X3 < X1} <- +winning_amount(X1), win(ag2, X1);
+bid(Z, A) : {B bid(ag2, X1), B bid(ag3, X2), B bid(ag4, X3), ~ .B winning_amount(Am), X1 < X2, X3 < X2} <- +winning_amount(X2), win(ag3, X2);
+bid(Z, A) : {B bid(ag2, X1), B bid(ag3, X2), B bid(ag4, X3), ~ .B winning_amount(Am), X2 < X3, X1 < X3} <- +winning_amount(X2), win(ag4, X3);
+bid(Z, A) : {B winning_amount(Am), Am < A} <- -winning_amount(Am), +winning_amount(A), win(Z, A);

:name: ag2

:Initial Beliefs:

my_name(ag2)
trust(ag4)

:Initial Goals:

bid [perform]

:Plans:

+.received(:tell, B): {True} <- +B;   
+!bid [perform] : {B my_name(Name), ~ .sent(ag1, Name, :tell, bid(150, Name))} <- .send(ag1, :tell, bid(150, Name));
+win(A, X) : {B my_name(Name), ~ B win(Name, Y), B trust(Ag), ~ .sent(Ag, Name, :tell, coalition(Name))} <- .send(Ag, :tell, coalition(Name));
+agree(A, X) : {True} <- .send(ag1, :tell, bid(300, ag2));

:name: ag3

:Initial Beliefs:

my_name(ag3)

:Initial Goals:

bid [perform]

:Plans:

+.received(:tell, B): {True} <- +B;   
+!bid [perform] : {B my_name(Name), ~ .sent(ag1, Name, :tell, bid(200, Name))} <- .send(ag1, :tell, bid(200, Name));

:name: ag4

:Initial Beliefs:

my_name(ag4)

:Initial Goals:

bid [perform]

:Plans:

+.received(:tell, B): {True} <- +B;   
+!bid [perform] : {B my_name(Name), ~ .sent(ag1, Name, :tell, bid(150, Name))} <- .send(ag1, :tell, bid(150, Name));
+coalition(A) : { B my_name(Name), ~ .sent(A, Name, :tell, agree(Name, 150))} <- .send(A, :tell, agree(Name, 150));